import {defineField, defineType} from 'sanity'

const richTextBlock = {
  type: 'block',
  title: 'Bloc de texte',
  styles: [
    {title: 'Normal', value: 'normal'},
    {title: 'H2', value: 'h2'},
    {title: 'H3', value: 'h3'},
    {title: 'H4', value: 'h4'},
    {title: 'Citation', value: 'blockquote'},
  ],
  marks: {
    decorators: [
      {title: 'Gras', value: 'strong'},
      {title: 'Italique', value: 'em'},
      {title: 'Souligné', value: 'underline'},
      {title: 'Barré', value: 'strike-through'},
    ],
    annotations: [
      {
        name: 'link',
        type: 'object',
        title: 'Lien',
        fields: [
          {
            name: 'href',
            type: 'url',
            title: 'URL',
            validation: (rule: any) =>
              rule.uri({
                scheme: ['http', 'https', 'mailto'],
              }),
          },
        ],
      },
    ],
  },
  lists: [
    {title: 'Puces', value: 'bullet'},
    {title: 'Numéroté', value: 'number'},
  ],
}

export const voyageType = defineType({
  name: 'voyage',
  title: 'Voyage',
  type: 'document',
  groups: [
    {name: 'basic', title: 'Informations de Base'},
    {name: 'photoGallery', title: 'Galerie de Photos'},
    {name: 'voyageDescription', title: 'Déscriptions du voyage'},
    {name: 'badges', title: 'Badges'},
    {name: 'availability', title: 'Disponibilités par Mois'},
    {name: 'perfectPeriods', title: 'Périodes Idéales'},
    {name: 'pricing', title: 'Informations sur le prix'},
    {name: 'accompanists', title: 'Accompagnants'},
    {name: 'programme', title: 'Programme'},
    {name: 'housing', title: 'Hébergement'},
    {name: 'faq', title: 'FAQ'},
    {name: 'seo', title: 'SEO'},
  ],
  fields: [
    defineField({name: 'published', type: 'boolean', group: 'basic', title: 'Voyage publié'}),
    defineField({
      name: 'title',
      type: 'string',
      validation: (r) => r.required(),
      group: 'basic',
      title: 'Titre du voyage',
    }),
    defineField({
      name: 'slug',
      type: 'slug',
      options: {source: 'title'},
      validation: (r) => r.required(),
      group: 'basic',
      title: 'Slug du voyage',
    }),
    defineField({
      name: 'groupeAvailable',
      type: 'boolean',
      group: 'basic',
      title: 'Voyage disponible en groupe',
    }),
    defineField({
      name: 'privatisationAvailable',
      type: 'boolean',
      group: 'basic',
      title: 'Voyage disponible en privatisation',
    }),
    defineField({
      name: 'customAvailable',
      type: 'boolean',
      group: 'basic',
      title: 'Voyage disponible en sur-mesure',
    }),
    defineField({name: 'level', type: 'string', group: 'basic', title: 'Niveau de difficulté'}),
    defineField({name: 'duration', type: 'number', group: 'basic', title: 'Durée du voyage'}),
    defineField({name: 'nights', type: 'number', group: 'basic', title: 'Nombre de nuits'}),
    defineField({
      name: 'includeFlight',
      type: 'boolean',
      group: 'basic',
      title: 'Voyage inclut un vol',
    }),
    defineField({name: 'housingType', type: 'string', group: 'basic', title: 'Type de logement'}),
    defineField({
      name: 'minAge',
      type: 'number',
      initialValue: 8,
      group: 'basic',
      title: 'Age minimum',
    }),
    defineField({name: 'rating', type: 'number', group: 'basic', title: 'Note moyenne'}),
    defineField({
      name: 'comments',
      type: 'number',
      group: 'basic',
      title: 'Nombre de commentaires',
    }),
    defineField({
      name: 'miniatureDisplay',
      type: 'string',
      group: 'basic',
      title: 'Miniature affichée',
    }),
    defineField({
      name: 'image',
      type: 'image',
      options: {hotspot: true},
      group: 'basic',
      fields: [{name: 'alt', type: 'string'} as any],
      title: 'Image principale',
    }),
    defineField({
      name: 'imageSecondary',
      type: 'image',
      options: {hotspot: true},
      group: 'basic',
      fields: [{name: 'alt', type: 'string'} as any],
      title: 'Image secondaire',
    }),
    defineField({
      name: 'destinations',
      title: 'Destinations',
      type: 'array',
      of: [{type: 'reference', to: [{type: 'destination'}]}],
      validation: (r) => r.min(1),
      group: 'basic',
    }),
    defineField({
      name: 'experienceType',
      title: 'Experience',
      type: 'reference',
      to: [{type: 'experience'}],
      group: 'basic',
    }),
    defineField({
      name: 'categories',
      type: 'array',
      of: [{type: 'reference', to: [{type: 'category'}]}],
      group: 'basic',
    }),
    defineField({
      name: 'idealPeriods',
      type: 'object',
      title: 'Périodes idéales',
      group: 'perfectPeriods',
      fields: [
        {name: 'toutePeriodes', type: 'boolean'} as any,
        {name: 'janvier', type: 'boolean'} as any,
        {name: 'fevrier', type: 'boolean'} as any,
        {name: 'mars', type: 'boolean'} as any,
        {name: 'avril', type: 'boolean'} as any,
        {name: 'mai', type: 'boolean'} as any,
        {name: 'juin', type: 'boolean'} as any,
        {name: 'juillet', type: 'boolean'} as any,
        {name: 'aout', type: 'boolean'} as any,
        {name: 'septembre', type: 'boolean'} as any,
        {name: 'octobre', type: 'boolean'} as any,
        {name: 'novembre', type: 'boolean'} as any,
        {name: 'decembre', type: 'boolean'} as any,
      ],
    }),
    defineField({
      name: 'monthlyAvailability',
      type: 'object',
      title: 'Disponibilités par mois',
      group: 'availability',
      fields: [
        {name: 'toutePeriodes', type: 'boolean'} as any,
        {name: 'janvier', type: 'boolean'} as any,
        {name: 'fevrier', type: 'boolean'} as any,
        {name: 'mars', type: 'boolean'} as any,
        {name: 'avril', type: 'boolean'} as any,
        {name: 'mai', type: 'boolean'} as any,
        {name: 'juin', type: 'boolean'} as any,
        {name: 'juillet', type: 'boolean'} as any,
        {name: 'aout', type: 'boolean'} as any,
        {name: 'septembre', type: 'boolean'} as any,
        {name: 'octobre', type: 'boolean'} as any,
        {name: 'novembre', type: 'boolean'} as any,
        {name: 'decembre', type: 'boolean'} as any,
      ],
    }),
    defineField({
      name: 'authorNote',
      type: 'object',
      title: "Note de l'auteur",
      group: 'voyageDescription',
      fields: [
        {name: 'text', type: 'array', of: [richTextBlock]},
        {name: 'author', type: 'reference', to: [{type: 'teamMember'}]},
        {name: 'affixeAuthor', type: 'string'},
      ],
    }),
    defineField({
      name: 'experiencesBlock',
      type: 'array',
      of: [richTextBlock],
      group: 'voyageDescription',
      title: 'Bloc expériences',
    }),
    defineField({
      name: 'description',
      type: 'text',
      group: 'voyageDescription',
      title: 'Description du voyage',
    }),
    defineField({
      name: 'emailDescription',
      type: 'text',
      group: 'voyageDescription',
      title: 'Description email',
    }),
    defineField({
      name: 'metaDescription',
      type: 'text',
      group: 'voyageDescription',
      title: 'Description méta',
    }),
    defineField({
      name: 'badgeSection',
      type: 'object',
      group: 'badges',
      title: 'Badges',
      fields: [
        {
          name: 'groupeBadge',
          type: 'object',
          title: 'Badge groupe',
          fields: [
            {name: 'text', type: 'string'} as any,
            {name: 'visible', type: 'boolean'} as any,
          ],
        } as any,
        {
          name: 'durationBadge',
          type: 'object',
          title: 'Badge durée',
          fields: [
            {name: 'text', type: 'string'} as any,
            {name: 'visible', type: 'boolean'} as any,
          ],
        } as any,
        {
          name: 'includeFlightBadge',
          type: 'object',
          title: 'Badge vol',
          fields: [
            {name: 'text', type: 'string'} as any,
            {name: 'visible', type: 'boolean'} as any,
          ],
        } as any,
        {
          name: 'housingBadge',
          type: 'object',
          title: 'Badge logement',
          fields: [
            {name: 'text', type: 'string'} as any,
            {name: 'visible', type: 'boolean'} as any,
          ],
        } as any,
        {
          name: 'periodBadge',
          type: 'object',
          title: 'Badge période',
          fields: [
            {name: 'text', type: 'string'} as any,
            {name: 'visible', type: 'boolean'} as any,
          ],
        } as any,
      ],
    }),
    defineField({
      name: 'programmeBlock',
      type: 'array',
      group: 'programme',
      title: 'Bloc programme',
      of: [
        {
          type: 'object',
          fields: [
            {name: 'title', type: 'string'} as any,
            {name: 'badgeText', type: 'string'} as any,
            {name: 'description', type: 'text'} as any,
            {name: 'photo', type: 'image', options: {hotspot: true}} as any,
            {name: 'denivellation', type: 'string'} as any,
            {name: 'road', type: 'string'} as any,
            {name: 'night', type: 'string'} as any,
          ],
        },
      ],
    }),
    defineField({
      name: 'pricingDetailsBlock',
      type: 'object',
      group: 'pricing',
      title: 'Détails du prix',
      fields: [
        {name: 'listInclude', type: 'array', title: 'Ce qui est inclus', of: [richTextBlock]} as any,
        {name: 'listExclude', type: 'array', title: 'Ce qui est exclus', of: [richTextBlock]} as any,
      ],
    }),
    defineField({
      name: 'pricing',
      type: 'object',
      group: 'pricing',
      title: 'Prix',
      fields: [
        {name: 'startingPrice', type: 'number'} as any,
        {name: 'lastMinuteAvailable', type: 'boolean'} as any,
        {name: 'lastMinuteReduction', type: 'number'} as any,
        {name: 'earlyBirdAvailable', type: 'boolean'} as any,
        {name: 'earlyBirdReduction', type: 'number'} as any,
        {name: 'maxTravelers', type: 'number'} as any,
        {name: 'minTravelersToConfirm', type: 'number'} as any,
        {name: 'indivRoom', type: 'boolean'} as any,
        {name: 'forcedIndivRoom', type: 'boolean'} as any,
        {name: 'indivRoomPrice', type: 'number'} as any,
        {name: 'cseReduction', type: 'number'} as any,
        {name: 'cseAvailable', type: 'boolean'} as any,
        {name: 'childrenPromo', type: 'number'} as any,
        {name: 'childrenAge', type: 'number', initialValue: 12} as any,
        {name: 'airportCode', type: 'array', of: [{type: 'string'}]} as any,
      ],
    }),
    defineField({
      name: 'accompanistsDescription',
      type: 'string',
      group: 'accompanists',
      title: 'Description accompagnants',
    }),
    defineField({
      name: 'accompanistsList',
      type: 'array',
      group: 'accompanists',
      title: 'Liste accompagnants',
      of: [
        {
          type: 'object',
          fields: [
            {name: 'name', type: 'string'} as any,
            {name: 'description', type: 'text'} as any,
            {name: 'role', type: 'string'} as any,
            {name: 'image', type: 'image', options: {hotspot: true}} as any,
          ],
        },
      ],
    }),
    defineField({
      name: 'housingBlock',
      type: 'array',
      group: 'housing',
      title: 'Bloc logement',
      of: [
        {
          type: 'object',
          fields: [
            {name: 'title', type: 'string'} as any,
            {name: 'housingType', type: 'string'} as any,
            {name: 'housingMood', type: 'string'} as any,
            {
              name: 'image',
              type: 'array',
              of: [
                {
                  type: 'image',
                  options: {hotspot: true},
                  fields: [{name: 'alt', type: 'string'} as any],
                },
              ],
            } as any,
          ],
        },
      ],
    }),
    defineField({
      name: 'photosList',
      type: 'array',
      group: 'photoGallery',
      of: [
        {type: 'image', options: {hotspot: true}, fields: [{name: 'alt', type: 'string'} as any]},
      ],
      title: 'Liste de photos dans la galerie',
    }),
    defineField({
      name: 'videoLinks',
      type: 'array',
      of: [{type: 'url'}],
      group: 'basic',
      title: 'Liens de videos',
    }),
    defineField({
      name: 'faqBlock',
      type: 'array',
      group: 'faq',
      title: 'Bloc FAQ',
      of: [
        {
          type: 'object',
          fields: [
            {name: 'question', type: 'string'} as any,
            {name: 'answer', type: 'text'} as any,
          ],
        },
      ] as any,
    }),
    defineField({
      name: 'seoSection',
      type: 'object',
      group: 'seo',
      title: 'SEO',
      fields: [
        {name: 'metaTitle', type: 'string'} as any,
        {name: 'canonicalUrl', type: 'url'} as any,
        {name: 'ogTitle', type: 'string'} as any,
        {name: 'ogDescription', type: 'text'} as any,
        {
          name: 'ogImage',
          type: 'image',
          options: {hotspot: true},
          fields: [{name: 'alt', type: 'string'} as any],
        } as any,
        {name: 'twitterTitle', type: 'string'} as any,
        {name: 'twitterDescription', type: 'text'} as any,
        {
          name: 'twitterImage',
          type: 'image',
          options: {hotspot: true},
          fields: [{name: 'alt', type: 'string'} as any],
        } as any,
        {name: 'twitterCard', type: 'string'} as any,
      ],
    }),
  ],
})
